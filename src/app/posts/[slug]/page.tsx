import fs from "fs";
import path from "path";
import matter from "gray-matter";
import { notFound } from "next/navigation";
import { remark } from "remark";
import html from "remark-html";
import PostClientSection from "@/components/PostClientSection";

export default async function PostPage({ params }: { params: { slug: string } }) {
  const filePath = path.join(process.cwd(), "posts", `${params.slug}.md`);

  if (!fs.existsSync(filePath)) return notFound();

  const fileContent = fs.readFileSync(filePath, "utf-8");
  const { data: fm, content } = matter(fileContent);

  // Convert Markdown → HTML
  const processedContent = await remark().use(html, { sanitize: false }).process(content);
  let htmlContent = processedContent.toString();

  // ✅ Replace <hr> tags (generated by --- in Markdown) with invisible spacing divs
  htmlContent = htmlContent.replace(/<hr\s*\/?>/g, '<div class="gap-section"></div>');

  return (
    <article className="max-w-3xl mx-auto bg-white rounded-2xl shadow-sm p-6 mt-24">
      {/* Title */}
      <h1 className="text-3xl font-bold mb-4 text-black">{fm.title}</h1>

      {/* Excerpt */}
      {fm.excerpt && <p className="text-lg mb-6 text-black">{fm.excerpt}</p>}

      {/* Markdown Body */}
      <div
        className="prose prose-lg max-w-none text-black"
        dangerouslySetInnerHTML={{ __html: htmlContent }}
      />

      {/* Buy Button */}
     <PostClientSection affiliateLink={fm.affiliateLink} />


      {/* Back Link */}
      <div className="mt-8">
        <a href="/" className="text-brand hover:underline">
          ← Back to Home
        </a>
      </div>
    </article>
  );
}
